import java.util.*;

public class Rotate_Matrix_90 {
    public static int[][] rotate(int arr[][]) {

        int[][] ansarr = new int[arr.length][arr[0].length];
        int n = ansarr.length;
        for (int i = 0; i < ansarr.length; i++) {
            for (int j = 0; j < ansarr[0].length; j++) {
                ansarr[j][n - 1 - i] = arr[i][j];
            }
        }
        // in this approach we use extra space to store the answer matrix cause space
        // will be O(NXM)=O(N^2)
        return ansarr;
    }

    public static void reverse(int arr[][]) {
        int n = arr.length;
        for (int i = 0; i < n; i++) {
            int start = 0;
            int end = arr[0].length - 1;
            while (start < end) {
                int temp = arr[i][start];
                arr[i][start] = arr[i][end];
                arr[i][end] = temp;
                start++;
                end--;
            }
        }
    }

    public static int[][] rotateBteerway(int arr[][]) {

        int n = arr.length;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < arr[0].length; j++) {
                int temp = arr[i][j];
                arr[i][j] = arr[j][i];
                arr[j][i] = temp;
            }
        }
        //to remate the matrix 90  ! first take the tesnpose of the original matrix and then reverse the matrix 
        reverse(arr);

        return arr;
    }

    public static void main(String[] args) {
        int[][] arr = {
                { 1, 2, 3, 4 },
                { 5, 6, 7, 8 },
                { 9, 10, 11, 12 },
                { 13, 14, 15, 16 },

        };
        int[][] answermatrix = rotate(arr);
         System.out.println("Brute force  approach");
        for (int i = 0; i < answermatrix.length; i++) {
            System.out.println(Arrays.toString(answermatrix[i]));
        }
        System.out.println();
        System.out.println("Optimze approach");
        int[][] answermatrix2 = rotateBteerway(arr);
        for (int i = 0; i < answermatrix2.length; i++) {
            System.out.println(Arrays.toString(answermatrix2[i]));
        }
    }
}


output :- 
Brute force  approach
[13, 9, 5, 1]
[14, 10, 6, 2]
[15, 11, 7, 3]
[16, 12, 8, 4]

Optimze approach
[13, 9, 5, 1]
[14, 10, 6, 2]
[15, 11, 7, 3]
[16, 12, 8, 4]


| Approach             | Time Complexity | Space Complexity | Notes                        |
| -------------------- | --------------- | ---------------- | ---------------------------- |
| Brute Force          | O(N²)           | O(N²)            | Creates a new rotated matrix |
| Optimized (In-place) | O(N²)           | O(1)             | Transpose + Reverse          |
