public class SearchingIN2D {
    public static void searching(int arr[][], int t) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[i].length; j++) {
                if (arr[i][j] == t) {
                    System.out.println("Element found at: (" + i + ", " + j + ")");
                    return; // stop after finding the first match
                }
            }
        }
        System.out.println("Element not found.");
    }

    public static void main(String[] args) {
        int[][] arr = {
            { 1, 2, 3, 4 },
            { 5, 6, 7, 8 },
            { 9, 10, 11, 12 }
        };

        searching(arr, 7);
    }
}


| **Aspect**           | **Value**     | **Explanation**                                              |
| -------------------- | ------------- | ------------------------------------------------------------ |
| **Time Complexity**  | O(n × m)      | You check each element once in the 2D array of size `n × m`. |
| **Space Complexity** | O(1)          | No extra space is used except loop variables.                |
| **Best Case**        | O(1)          | If the target is found at the first element.                 |
| **Worst Case**       | O(n × m)      | If the target is at the last position or not present at all. |
| **Input Format**     | `int[][] arr` | A 2D array with `n` rows and `m` columns.                    |
