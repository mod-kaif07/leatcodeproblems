public class addthe_dignoal_sum {
    public static int sum1(int arr[][]) {
        int sumk = 0;
        for (int i = 0; i < arr.length; i++) {
            // Primary diagonal: i == j
            sumk += arr[i][i];
        }
        return sumk;
    }

    public static int sum2(int arr[][]) {
        int sum = 0;

        int i = 0;
        int j = arr.length - 1;
        while (j >= 0) {
            sum += arr[i][j];
            i++;
            j--;
        }
        return sum;
    }

    public static void main(String[] args) {
        int[][] arr = {
                { 17, 18, 19, 20 },
                { 21, 22, 23, 24 },
                { 25, 26, 27, 28 },
                { 29, 30, 31, 32 }
        };
        int d1Sum = sum1(arr);
        int d2Sum = sum2(arr);
        System.out.println(d1Sum);
        System.out.println(d2Sum);

    }
}




| Aspect           | Complexity |
| ---------------- | ---------- |
| Time Complexity  | O(n)       |
| Space Complexity | O(1)       |


Time Complexity:
sum1() loop runs once per row → O(n)
sum2() while-loop also runs n times → O(n)
