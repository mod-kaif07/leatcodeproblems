import java.util.ArrayList;
import java.util.Collections;
import java.util.Stack;

public class Next_greater_elemnt {
    public static ArrayList<Integer> Nextgreater(int arr[]) {   //Brute force approach
        ArrayList<Integer> newList = new ArrayList<>();

        for (int i = 0; i < arr.length; i++) {
            int nextgreater = -1;
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] < arr[j]) {
                    nextgreater = arr[j];
                    break;
                }
            }
            newList.add(nextgreater);
        }
        return newList;
    }

    public static ArrayList<Integer> Nextgreater_optimze(int arr[]) {   //Optimizw approach
        int n = arr.length;
        ArrayList<Integer> newList = new ArrayList<>(Collections.nCopies(n, -1));
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < arr.length; i++) {
            while (!st.isEmpty() && arr[i] > arr[st.peek()]) {
                int index = st.pop();
                newList.set(index, arr[i]);
            }
            st.push(i);
        }

        return newList;
    }

    public static void main(String[] args) {
        int arr[] = {9, 7, 3, 1, 4, 2, 10, 9, 8 };
        ArrayList<Integer> list = Nextgreater(arr);
        System.out.println(list);

        ArrayList<Integer> listOptimize = Nextgreater_optimze(arr);
        System.out.println(listOptimize);
    }
}



[10, 10, 4, 4, 10, 10, -1, -1, -1]
[10, 10, 4, 4, 10, 10, -1, -1, -1]
