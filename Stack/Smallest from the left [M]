

import java.util.*;

public class Smallest_from_the_left {
    public static int[] smallest(int arr[]) {
        int[] newarr = new int[arr.length];
        Stack<Integer> st = new Stack<>();
        Arrays.fill(newarr, -1);
        for (int i = 0; i < arr.length; i++) {
             while (!st.isEmpty() && arr[st.peek()] >= arr[i]) {
                st.pop();  // Remove elements >= current
            }
            if (!st.isEmpty()) {
                newarr[i] = arr[st.peek()]; // Last smaller element on left
            }
            st.push(i);
        }
        return newarr;
    }

    public static void main(String[] args) {
        int arr[] = {
                1, 5, 0, 3, 4, 5
        };
        int update[] = smallest(arr);
        System.out.println(Arrays.toString(update));
    }
}


[-1, 1, -1, 0, 3, 4]
