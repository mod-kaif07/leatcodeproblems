// two pointer approach 

class Solution {
    public int[] twoSum(int[] arr, int target) {
       int start=0;
       int end= arr.length-1;
       while(start<=end){
        if(arr[start]+arr[end]==target){
            return new int []{start+1,end+1};
        }
        else if(arr[start]+arr[end]>target){
        end--;
       }
       else{
        start++;
       }
     }return new int[]{-1,-1};
}}

| Complexity | Value |
| ---------- | ----- |
| **Time**   | O(n)  |
| **Space**  | O(1)  |


//BRUTE FORCE APPROACH

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int n= numbers.length;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(numbers[i]+numbers[j]==target){
                    return new int[]{i+1, j+1};

                }
            }
        }
        return  new int[]{-1, -1};
    }
}

| Complexity | Value |
| ---------- | ----- |
| **Time**   | O(n^2)  |
| **Space**  | O(1)  |
